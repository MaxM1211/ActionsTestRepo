name: Merge Files

on:
  # pull_request:
  #   types: [opened, synchronize, reopened]
  push:
    branches:
      - "main"

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Get sha
        uses: actions/github-script@v6
        id: sha
        with:
          result-encoding: string
          script: |
            const crypto = require('crypto');
            const fs = require('fs');

            const fileBuffer = fs.readFileSync('merged.txt');
            const hashSum = crypto.createHash('sha256');
            hashSum.update(fileBuffer);

            const hex = hashSum.digest('hex');

            return hex;

      - name: Merge files
        run: |
          echo "Merging files..."
          cat file*.txt > merged.txt

      - name: Commit and push
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');

            console.log("begin");


            const path = 'merged.txt';
            const content = fs.readFileSync(path, 'utf8');
            const message = 'Merged files';
            const branch = context.ref.replace('refs/heads/', '');
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            console.log('Committing "${message}" to ${owner}/${repo} on branch ${branch}');

            console.log(${{steps.sha.outputs.result}})

            //console.log(github);
            github.rest.repos.createOrUpdateFileContents({
              owner,
              repo,
              path,
              message,
              content: Buffer.from(content).toString('base64'),
              branch,
              sha: ${{steps.sha.outputs.result}}
            });
